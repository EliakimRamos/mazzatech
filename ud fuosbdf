[1mdiff --git a/.editorconfig b/.editorconfig[m
[1mnew file mode 100644[m
[1mindex 0000000..1671c9b[m
[1m--- /dev/null[m
[1m+++ b/.editorconfig[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mroot = true[m
[32m+[m
[32m+[m[32m[*][m
[32m+[m[32mcharset = utf-8[m
[32m+[m[32mend_of_line = lf[m
[32m+[m[32minsert_final_newline = true[m
[32m+[m[32mindent_style = space[m
[32m+[m[32mindent_size = 4[m
[32m+[m[32mtrim_trailing_whitespace = true[m
[32m+[m
[32m+[m[32m[*.md][m
[32m+[m[32mtrim_trailing_whitespace = false[m
[32m+[m
[32m+[m[32m[*.{yml,yaml}][m
[32m+[m[32mindent_size = 2[m
[32m+[m
[32m+[m[32m[docker-compose.yml][m
[32m+[m[32mindent_size = 4[m
[1mdiff --git a/.env.example b/.env.example[m
[1mnew file mode 100644[m
[1mindex 0000000..44853cd[m
[1m--- /dev/null[m
[1m+++ b/.env.example[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mAPP_NAME=Laravel[m
[32m+[m[32mAPP_ENV=local[m
[32m+[m[32mAPP_KEY=[m
[32m+[m[32mAPP_DEBUG=true[m
[32m+[m[32mAPP_URL=http://localhost[m
[32m+[m
[32m+[m[32mLOG_CHANNEL=stack[m
[32m+[m[32mLOG_LEVEL=debug[m
[32m+[m
[32m+[m[32mDB_CONNECTION=mysql[m
[32m+[m[32mDB_HOST=127.0.0.1[m
[32m+[m[32mDB_PORT=3306[m
[32m+[m[32mDB_DATABASE=laravel[m
[32m+[m[32mDB_USERNAME=root[m
[32m+[m[32mDB_PASSWORD=[m
[32m+[m
[32m+[m[32mBROADCAST_DRIVER=log[m
[32m+[m[32mCACHE_DRIVER=file[m
[32m+[m[32mFILESYSTEM_DRIVER=local[m
[32m+[m[32mQUEUE_CONNECTION=sync[m
[32m+[m[32mSESSION_DRIVER=file[m
[32m+[m[32mSESSION_LIFETIME=120[m
[32m+[m
[32m+[m[32mMEMCACHED_HOST=127.0.0.1[m
[32m+[m
[32m+[m[32mREDIS_HOST=127.0.0.1[m
[32m+[m[32mREDIS_PASSWORD=null[m
[32m+[m[32mREDIS_PORT=6379[m
[32m+[m
[32m+[m[32mMAIL_MAILER=smtp[m
[32m+[m[32mMAIL_HOST=mailhog[m
[32m+[m[32mMAIL_PORT=1025[m
[32m+[m[32mMAIL_USERNAME=null[m
[32m+[m[32mMAIL_PASSWORD=null[m
[32m+[m[32mMAIL_ENCRYPTION=null[m
[32m+[m[32mMAIL_FROM_ADDRESS=null[m
[32m+[m[32mMAIL_FROM_NAME="${APP_NAME}"[m
[32m+[m
[32m+[m[32mAWS_ACCESS_KEY_ID=[m
[32m+[m[32mAWS_SECRET_ACCESS_KEY=[m
[32m+[m[32mAWS_DEFAULT_REGION=us-east-1[m
[32m+[m[32mAWS_BUCKET=[m
[32m+[m[32mAWS_USE_PATH_STYLE_ENDPOINT=false[m
[32m+[m
[32m+[m[32mPUSHER_APP_ID=[m
[32m+[m[32mPUSHER_APP_KEY=[m
[32m+[m[32mPUSHER_APP_SECRET=[m
[32m+[m[32mPUSHER_APP_CLUSTER=mt1[m
[32m+[m
[32m+[m[32mMIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"[m
[32m+[m[32mMIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"[m
[1mdiff --git a/.gitattributes b/.gitattributes[m
[1mnew file mode 100644[m
[1mindex 0000000..967315d[m
[1m--- /dev/null[m
[1m+++ b/.gitattributes[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m* text=auto[m
[32m+[m[32m*.css linguist-vendored[m
[32m+[m[32m*.scss linguist-vendored[m
[32m+[m[32m*.js linguist-vendored[m
[32m+[m[32mCHANGELOG.md export-ignore[m
[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..eb003b0[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m/node_modules[m
[32m+[m[32m/public/hot[m
[32m+[m[32m/public/storage[m
[32m+[m[32m/storage/*.key[m
[32m+[m[32m/vendor[m
[32m+[m[32m.env[m
[32m+[m[32m.env.backup[m
[32m+[m[32m.phpunit.result.cache[m
[32m+[m[32mdocker-compose.override.yml[m
[32m+[m[32mHomestead.json[m
[32m+[m[32mHomestead.yaml[m
[32m+[m[32mnpm-debug.log[m
[32m+[m[32myarn-error.log[m
[32m+[m[32m/.idea[m
[32m+[m[32m/.vscode[m
[1mdiff --git a/.styleci.yml b/.styleci.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..9231873[m
[1m--- /dev/null[m
[1m+++ b/.styleci.yml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mphp:[m
[32m+[m[32m  preset: laravel[m
[32m+[m[32m  disabled:[m
[32m+[m[32m    - no_unused_imports[m
[32m+[m[32m  finder:[m
[32m+[m[32m    not-name:[m
[32m+[m[32m      - index.php[m
[32m+[m[32m      - server.php[m
[32m+[m[32mjs:[m
[32m+[m[32m  finder:[m
[32m+[m[32m    not-name:[m
[32m+[m[32m      - webpack.mix.js[m
[32m+[m[32mcss: true[m
[1mdiff --git a/README.md b/README.md[m
[1mnew file mode 100644[m
[1mindex 0000000..ceb6ac0[m
[1m--- /dev/null[m
[1m+++ b/README.md[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32m<p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400"></a></p>[m
[32m+[m
[32m+[m[32m<p align="center">[m
[32m+[m[32m<a href="https://travis-ci.org/laravel/framework"><img src="https://travis-ci.org/laravel/framework.svg" alt="Build Status"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>[m
[32m+[m[32m<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>[m
[32m+[m[32m</p>[m
[32m+[m
[32m+[m[32m## About Laravel[m
[32m+[m
[32m+[m[32mLaravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:[m
[32m+[m
[32m+[m[32m- [Simple, fast routing engine](https://laravel.com/docs/routing).[m
[32m+[m[32m- [Powerful dependency injection container](https://laravel.com/docs/container).[m
[32m+[m[32m- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.[m
[32m+[m[32m- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).[m
[32m+[m[32m- Database agnostic [schema migrations](https://laravel.com/docs/migrations).[m
[32m+[m[32m- [Robust background job processing](https://laravel.com/docs/queues).[m
[32m+[m[32m- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).[m
[32m+[m
[32m+[m[32mLaravel is accessible, powerful, and provides tools required for large, robust applications.[m
[32m+[m
[32m+[m[32m## Learning Laravel[m
[32m+[m
[32m+[m[32mLaravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.[m
[32m+[m
[32m+[m[32mIf you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 1500 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.[m
[32m+[m
[32m+[m[32m## Laravel Sponsors[m
[32m+[m
[32m+[m[32mWe would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).[m
[32m+[m
[32m+[m[32m### Premium Partners[m
[32m+[m
[32m+[m[32m- **[Vehikl](https://vehikl.com/)**[m
[32m+[m[32m- **[Tighten Co.](https://tighten.co)**[m
[32m+[m[32m- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**[m
[32m+[m[32m- **[64 Robots](https://64robots.com)**[m
[32m+[m[32m- **[Cubet Techno Labs](https://cubettech.com)**[m
[32m+[m[32m- **[Cyber-Duck](https://cyber-duck.co.uk)**[m
[32m+[m[32m- **[Many](https://www.many.co.uk)**[m
[32m+[m[32m- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**[m
[32m+[m[32m- **[DevSquad](https://devsquad.com)**[m
[32m+[m[32m- **[Curotec](https://www.curotec.com/services/technologies/laravel/)**[m
[32m+[m[32m- **[OP.GG](https://op.gg)**[m
[32m+[m
[32m+[m[32m## Contributing[m
[32m+[m
[32m+[m[32mThank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).[m
[32m+[m
[32m+[m[32m## Code of Conduct[m
[32m+[m
[32m+[m[32mIn order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).[m
[32m+[m
[32m+[m[32m## Security Vulnerabilities[m
[32m+[m
[32m+[m[32mIf you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.[m
[32m+[m
[32m+[m[32m## License[m
[32m+[m
[32m+[m[32mThe Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).[m
[1mdiff --git a/app/Console/Kernel.php b/app/Console/Kernel.php[m
[1mnew file mode 100644[m
[1mindex 0000000..69914e9[m
[1m--- /dev/null[m
[1m+++ b/app/Console/Kernel.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Console;[m
[32m+[m
[32m+[m[32muse Illuminate\Console\Scheduling\Schedule;[m
[32m+[m[32muse Illuminate\Foundation\Console\Kernel as ConsoleKernel;[m
[32m+[m
[32m+[m[32mclass Kernel extends ConsoleKernel[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * The Artisan commands provided by your application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $commands = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Define the application's command schedule.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function schedule(Schedule $schedule)[m
[32m+[m[32m    {[m
[32m+[m[32m        // $schedule->command('inspire')->hourly();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the commands for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function commands()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->load(__DIR__.'/Commands');[m
[32m+[m
[32m+[m[32m        require base_path('routes/console.php');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Exceptions/Handler.php b/app/Exceptions/Handler.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c18c43c[m
[1m--- /dev/null[m
[1m+++ b/app/Exceptions/Handler.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Exceptions;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;[m
[32m+[m[32muse Throwable;[m
[32m+[m
[32m+[m[32mclass Handler extends ExceptionHandler[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the exception types that are not reported.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontReport = [[m
[32m+[m[32m        //[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * A list of the inputs that are never flashed for validation exceptions.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var array[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $dontFlash = [[m
[32m+[m[32m        'current_password',[m
[32m+[m[32m        'password',[m
[32m+[m[32m        'password_confirmation',[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Register the exception handling callbacks for the application.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function register()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->reportable(function (Throwable $e) {[m
[32m+[m[32m            //[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/ConfirmPasswordController.php b/app/Http/Controllers/Auth/ConfirmPasswordController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..138c1f0[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/ConfirmPasswordController.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Illuminate\Foundation\Auth\ConfirmsPasswords;[m
[32m+[m
[32m+[m[32mclass ConfirmPasswordController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Confirm Password Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller is responsible for handling password confirmations and[m
[32m+[m[32m    | uses a simple trait to include the behavior. You're free to explore[m
[32m+[m[32m    | this trait and override any functions that require customization.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use ConfirmsPasswords;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Where to redirect users when the intended url fails.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $redirectTo = RouteServiceProvider::HOME;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new controller instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->middleware('auth');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/ForgotPasswordController.php b/app/Http/Controllers/Auth/ForgotPasswordController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..465c39c[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/ForgotPasswordController.php[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse Illuminate\Foundation\Auth\SendsPasswordResetEmails;[m
[32m+[m
[32m+[m[32mclass ForgotPasswordController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Password Reset Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller is responsible for handling password reset emails and[m
[32m+[m[32m    | includes a trait which assists in sending these notifications from[m
[32m+[m[32m    | your application to your users. Feel free to explore this trait.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use SendsPasswordResetEmails;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/LoginController.php b/app/Http/Controllers/Auth/LoginController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..18a0d08[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/LoginController.php[m
[36m@@ -0,0 +1,40 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Illuminate\Foundation\Auth\AuthenticatesUsers;[m
[32m+[m
[32m+[m[32mclass LoginController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Login Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller handles authenticating users for the application and[m
[32m+[m[32m    | redirecting them to your home screen. The controller uses a trait[m
[32m+[m[32m    | to conveniently provide its functionality to your applications.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use AuthenticatesUsers;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Where to redirect users after login.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $redirectTo = RouteServiceProvider::HOME;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new controller instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->middleware('guest')->except('logout');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/RegisterController.php b/app/Http/Controllers/Auth/RegisterController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..ed1a5e0[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/RegisterController.php[m
[36m@@ -0,0 +1,73 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse App\Models\User;[m
[32m+[m[32muse Illuminate\Foundation\Auth\RegistersUsers;[m
[32m+[m[32muse Illuminate\Support\Facades\Hash;[m
[32m+[m[32muse Illuminate\Support\Facades\Validator;[m
[32m+[m
[32m+[m[32mclass RegisterController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Register Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller handles the registration of new users as well as their[m
[32m+[m[32m    | validation and creation. By default this controller uses a trait to[m
[32m+[m[32m    | provide this functionality without requiring any additional code.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use RegistersUsers;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Where to redirect users after registration.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $redirectTo = RouteServiceProvider::HOME;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new controller instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->middleware('guest');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Get a validator for an incoming registration request.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array  $data[m
[32m+[m[32m     * @return \Illuminate\Contracts\Validation\Validator[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function validator(array $data)[m
[32m+[m[32m    {[m
[32m+[m[32m        return Validator::make($data, [[m
[32m+[m[32m            'name' => ['required', 'string', 'max:255'],[m
[32m+[m[32m            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],[m
[32m+[m[32m            'password' => ['required', 'string', 'min:8', 'confirmed'],[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new user instance after a valid registration.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  array  $data[m
[32m+[m[32m     * @return \App\Models\User[m
[32m+[m[32m     */[m
[32m+[m[32m    protected function create(array $data)[m
[32m+[m[32m    {[m
[32m+[m[32m        return User::create([[m
[32m+[m[32m            'name' => $data['name'],[m
[32m+[m[32m            'email' => $data['email'],[m
[32m+[m[32m            'password' => Hash::make($data['password']),[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/ResetPasswordController.php b/app/Http/Controllers/Auth/ResetPasswordController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b1726a3[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/ResetPasswordController.php[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Illuminate\Foundation\Auth\ResetsPasswords;[m
[32m+[m
[32m+[m[32mclass ResetPasswordController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Password Reset Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller is responsible for handling password reset requests[m
[32m+[m[32m    | and uses a simple trait to include this behavior. You're free to[m
[32m+[m[32m    | explore this trait and override any methods you wish to tweak.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use ResetsPasswords;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Where to redirect users after resetting their password.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $redirectTo = RouteServiceProvider::HOME;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Auth/VerificationController.php b/app/Http/Controllers/Auth/VerificationController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..5e749af[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Auth/VerificationController.php[m
[36m@@ -0,0 +1,42 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers\Auth;[m
[32m+[m
[32m+[m[32muse App\Http\Controllers\Controller;[m
[32m+[m[32muse App\Providers\RouteServiceProvider;[m
[32m+[m[32muse Illuminate\Foundation\Auth\VerifiesEmails;[m
[32m+[m
[32m+[m[32mclass VerificationController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /*[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    | Email Verification Controller[m
[32m+[m[32m    |--------------------------------------------------------------------------[m
[32m+[m[32m    |[m
[32m+[m[32m    | This controller is responsible for handling email verification for any[m
[32m+[m[32m    | user that recently registered with the application. Emails may also[m
[32m+[m[32m    | be re-sent if the user didn't receive the original email message.[m
[32m+[m[32m    |[m
[32m+[m[32m    */[m
[32m+[m
[32m+[m[32m    use VerifiesEmails;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Where to redirect users after verification.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @var string[m
[32m+[m[32m     */[m
[32m+[m[32m    protected $redirectTo = RouteServiceProvider::HOME;[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new controller instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->middleware('auth');[m
[32m+[m[32m        $this->middleware('signed')->only('verify');[m
[32m+[m[32m        $this->middleware('throttle:6,1')->only('verify', 'resend');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/Controller.php b/app/Http/Controllers/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a0a2a8a[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/Controller.php[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Foundation\Auth\Access\AuthorizesRequests;[m
[32m+[m[32muse Illuminate\Foundation\Bus\DispatchesJobs;[m
[32m+[m[32muse Illuminate\Foundation\Validation\ValidatesRequests;[m
[32m+[m[32muse Illuminate\Routing\Controller as BaseController;[m
[32m+[m
[32m+[m[32mclass Controller extends BaseController[m
[32m+[m[32m{[m
[32m+[m[32m    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/DoctorController.php b/app/Http/Controllers/DoctorController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..17c07ae[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/DoctorController.php[m
[36m@@ -0,0 +1,129 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse App\Http\Requests\DoctorCreateRequest;[m
[32m+[m[32muse App\Http\Requests\DoctorUpdateRequest;[m
[32m+[m[32muse App\Models\Doctor;[m
[32m+[m[32muse App\Models\User;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Arr;[m
[32m+[m[32muse Illuminate\Support\Facades\DB;[m
[32m+[m[32muse Spatie\Permission\Models\Role;[m
[32m+[m
[32m+[m[32mclass DoctorController extends Controller[m
[32m+[m[32m{[m
[32m+[m[41m    [m
[32m+[m[32m    function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m         $this->middleware('permission:doctor-list|doctor-create|doctor-edit|doctor-delete', ['only' => ['index','show']]);[m
[32m+[m[32m         $this->middleware('permission:doctor-create', ['only' => ['create','store']]);[m
[32m+[m[32m         $this->middleware('permission:doctor-edit', ['only' => ['edit','update']]);[m
[32m+[m[32m         $this->middleware('permission:doctor-delete', ['only' => ['destroy']]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display a listing of the resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function index()[m
[32m+[m[32m    {[m
[32m+[m[32m        $data = Doctor::all();[m
[32m+[m[32m        $i =0;[m
[32m+[m[32m        return view('doctors.index', compact('data','i'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for creating a new resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function create()[m
[32m+[m[32m    {[m
[32m+[m[32m        $roles = Role::pluck('name','name')->all();[m
[32m+[m[32m        return view('doctors.create',compact('roles'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Store a newly created resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function store(DoctorCreateRequest $request)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $user = User::create($payload);[m
[32m+[m[32m        $user->assignRole($request->input('roles'));[m
[32m+[m[32m        $payload['user_id'] = $user->id;[m
[32m+[m[32m        $doctor = Doctor::create($payload);[m
[32m+[m[32m        return redirect()->route('doctors.index')->with('sucesso', "Medico cadastrado com sucesso");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function show($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $doctor = Doctor::find($id);[m
[32m+[m[32m        return view('doctors.show',compact('doctor'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for editing the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function edit($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $doctor = Doctor::find($id);[m
[32m+[m[32m        $roles = Role::pluck('name','name')->all();[m
[32m+[m[32m        $user = User::find($doctor->user_id);[m
[32m+[m[32m        $userRole = $user->roles->pluck('name','name')->all();[m
[32m+[m[32m        return view('doctors.edit', compact('doctor','roles','user','userRole'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Update the specified resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function update(DoctorUpdateRequest $request, $id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $doctor = Doctor::find($id);[m
[32m+[m[32m        if (empty($payload['password'])) {[m
[32m+[m[32m            $payload = Arr::except($payload,'password');[m
[32m+[m[32m        }[m
[32m+[m[32m        $user = User::find($doctor->user_id);[m
[32m+[m[32m        $user->update($payload);[m
[32m+[m[32m        $doctor->update($payload);[m
[32m+[m[32m        DB::table('model_has_roles')->where('model_id',$user->id)->delete();[m
[32m+[m
[32m+[m[32m        $user->assignRole($payload['roles']);[m
[32m+[m
[32m+[m[32m        return redirect()->route('doctors.index')->with('sucesso','Medico editado com sucesso');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Remove the specified resource from storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function destroy($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $doctor = Doctor::find($id);[m
[32m+[m[32m        $user = User::find($doctor->user_id);[m
[32m+[m[32m        $doctor->delete();[m
[32m+[m[32m        $user->delete();[m
[32m+[m[32m        return redirect()->route('doctors.index')->with('sucesso','Medico excluido com sucesso');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/HomeController.php b/app/Http/Controllers/HomeController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7cbc2c3[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/HomeController.php[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m
[32m+[m[32mclass HomeController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Create a new controller instance.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return void[m
[32m+[m[32m     */[m
[32m+[m[32m    public function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m        $this->middleware('auth');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the application dashboard.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Contracts\Support\Renderable[m
[32m+[m[32m     */[m
[32m+[m[32m    public function index()[m
[32m+[m[32m    {[m
[32m+[m[32m        return view('home');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/PatientController.php b/app/Http/Controllers/PatientController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..9faaba7[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/PatientController.php[m
[36m@@ -0,0 +1,127 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse App\Http\Requests\PatientCreateRequest;[m
[32m+[m[32muse App\Http\Requests\PatientUpdateRequest;[m
[32m+[m[32muse App\Models\Patient;[m
[32m+[m[32muse App\Models\User;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Illuminate\Support\Arr;[m
[32m+[m[32muse Illuminate\Support\Facades\DB;[m
[32m+[m[32muse Spatie\Permission\Models\Role;[m
[32m+[m
[32m+[m[32mclass PatientController extends Controller[m
[32m+[m[32m{[m
[32m+[m[32m    function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m         $this->middleware('permission:patient-list|patient-create|patient-edit|patient-delete', ['only' => ['index','show']]);[m
[32m+[m[32m         $this->middleware('permission:patient-create', ['only' => ['create','store']]);[m
[32m+[m[32m         $this->middleware('permission:patient-edit', ['only' => ['edit','update']]);[m
[32m+[m[32m         $this->middleware('permission:patient-delete', ['only' => ['destroy']]);[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display a listing of the resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function index()[m
[32m+[m[32m    {[m
[32m+[m[32m        $data = Patient::all();[m
[32m+[m[32m        $i =0;[m
[32m+[m[32m        return view('patients.index', compact('data','i'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for creating a new resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function create()[m
[32m+[m[32m    {[m
[32m+[m[32m        $roles = Role::pluck('name','name')->all();[m
[32m+[m[32m        return view('patients.create',compact('roles'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Store a newly created resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function store(PatientCreateRequest $request)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $user = User::create($payload);[m
[32m+[m[32m        $user->assignRole($request->input('roles'));[m
[32m+[m[32m        $payload['user_id'] = $user->id;[m
[32m+[m[32m        $patient = Patient::create($payload);[m
[32m+[m[32m        return redirect()->route('patients.index')->with('sucesso', "Paciente cadastrado com sucesso");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function show($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $patient = Patient::find($id);[m
[32m+[m[32m        return view('patients.show', compact('patient'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for editing the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function edit($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $patient = Patient::find($id);[m
[32m+[m[32m        $roles = Role::pluck('name','name')->all();[m
[32m+[m[32m        $user = User::find($patient->user_id);[m
[32m+[m[32m        $userRole = $user->roles->pluck('name','name')->all();[m
[32m+[m[32m        return view('patients.edit', compact('patient','roles','user','userRole'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Update the specified resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function update(PatientUpdateRequest $request, $id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $patient = Patient::find($id);[m
[32m+[m[32m        if (empty($payload['password'])) {[m
[32m+[m[32m            $payload = Arr::except($payload,'password');[m
[32m+[m[32m        }[m
[32m+[m[32m        $user = User::find($patient->user_id);[m
[32m+[m[32m        $user->update($payload);[m
[32m+[m[32m        $patient->update($payload);[m
[32m+[m[32m        DB::table('model_has_roles')->where('model_id',$user->id)->delete();[m
[32m+[m
[32m+[m[32m        $user->assignRole($payload['roles']);[m
[32m+[m
[32m+[m[32m        return redirect()->route('patients.index')->with('sucesso','Paciente editado com sucesso');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Remove the specified resource from storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function destroy($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $patient = Patient::find($id);[m
[32m+[m[32m        $user = User::find($patient->user_id);[m
[32m+[m[32m        $patient->delete();[m
[32m+[m[32m        $user->delete();[m
[32m+[m[32m        return redirect()->route('patients.index')->with('sucesso','Paciente excluido com sucesso');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/RoleController.php b/app/Http/Controllers/RoleController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..d7cc664[m
[1m--- /dev/null[m
[1m+++ b/app/Http/Controllers/RoleController.php[m
[36m@@ -0,0 +1,125 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Http\Controllers;[m
[32m+[m
[32m+[m[32muse App\Http\Requests\RoleCreateRequest;[m
[32m+[m[32muse App\Http\Requests\RoleUpdateRequest;[m
[32m+[m[32muse Illuminate\Http\Request;[m
[32m+[m[32muse Spatie\Permission\Models\Permission;[m
[32m+[m[32muse Spatie\Permission\Models\Role;[m
[32m+[m[32muse Illuminate\Support\Facades\DB;[m
[32m+[m
[32m+[m[32mclass RoleController extends Controller[m
[32m+[m[32m{[m
[32m+[m[41m   [m
[32m+[m[32m    function __construct()[m
[32m+[m[32m    {[m
[32m+[m[32m         $this->middleware('permission:role-list|role-create|role-edit|role-delete', ['only' => ['index','show']]);[m
[32m+[m[32m         $this->middleware('permission:role-create', ['only' => ['create','store']]);[m
[32m+[m[32m         $this->middleware('permission:role-edit', ['only' => ['edit','update']]);[m
[32m+[m[32m         $this->middleware('permission:role-delete', ['only' => ['destroy']]);[m
[32m+[m[32m    }[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display a listing of the resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function index()[m
[32m+[m[32m    {[m
[32m+[m[32m        $roles = Role::all();[m
[32m+[m[32m        $i = 0;[m
[32m+[m[32m        return view('roles.index',compact('roles','i'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for creating a new resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function create()[m
[32m+[m[32m    {[m
[32m+[m[32m        $permission = Permission::get();[m
[32m+[m[32m        return view('roles.create', compact('permission'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Store a newly created resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function store(RoleCreateRequest $request)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $role = Role::create(['name' => $payload['name']]);[m
[32m+[m[32m        $role->syncPermissions($payload['permission']);[m
[32m+[m
[32m+[m[32m        return redirect()->route('roles.store')->with('sucesso','Role cadastrada com sucesso');[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Display the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function show($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $role = Role::find($id);[m
[32m+[m[32m        $rolePermissions = Permission::join("role_has_permissions","role_has_permissions.permission_id","=","permissions.id")[m
[32m+[m[32m            ->where("role_has_permissions.role_id",$id)[m
[32m+[m[32m            ->get();[m
[32m+[m[32m        return view('roles.show', compact('role', 'rolePermissions'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Show the form for editing the specified resource.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function edit($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $role = Role::find($id);[m
[32m+[m[32m        $permission = Permission::get();[m
[32m+[m[32m        $rolePermissions = DB::table("role_has_permissions")->where("role_has_permissions.role_id",$id)[m
[32m+[m[32m            ->pluck('role_has_permissions.permission_id','role_has_permissions.permission_id')[m
[32m+[m[32m            ->all();[m
[32m+[m
[32m+[m[32m        return view('roles.edit',compact('role','permission','rolePermissions'));[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Update the specified resource in storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  \Illuminate\Http\Request  $request[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function update(RoleUpdateRequest $request, $id)[m
[32m+[m[32m    {[m
[32m+[m[32m        $payload = $request->validated();[m
[32m+[m[32m        $role = Role::find($id);[m
[32m+[m[32m        $role->name = $payload['name'];[m
[32m+[m[32m        $role->save();[m
[32m+[m
[32m+[m[32m        $role->syncPermissions($payload['permission']);[m
[32m+[m
[32m+[m[32m        return redirect()->route('roles.index')[m
[32m+[m[32m                        ->with('sucesso','Role atualizado com sucesso');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Remove the specified resource from storage.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param  int  $id[m
[32m+[m[32m     * @return \Illuminate\Http\Response[m
[32m+[m[32m     */[m
[32m+[m[32m    public function destroy($id)[m
[32m+[m[32m    {[m
[32m+[m[32m        DB::table("roles")->where('id',$id)->delete();[m
[32m+[m[32m        return redirect()->route('roles.index')[m
[32m+[m[32m                        ->with('sucesso','Role deletado com sucesso');[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/app/Http/Controllers/ScheduleController.php b/app/Http/Controllers/ScheduleController.php[m
[1mnew file mode 100644[m
[1